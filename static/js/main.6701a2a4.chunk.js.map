{"version":3,"sources":["component/AddAppointments.js","component/ListAppointments.js","component/SearchAppointments.js","component/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChanges","bind","handleAdd","e","target","name","value","this","setState","preventDefault","newApt","props","addNewAppoinment","toggleForm","className","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","ListAppointments","appointmentsList","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateContent","innerText","date","parse","format","SearchAppointments","aria-label","searchValue","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderAs","href","role","App","myAppoinments","searchKey","lastIndexId","apt","appoinmentList","unshift","updatedApts","without","newAppoinmentList","findIndex","fetch","then","response","json","result","apts","order","sortedAppointments","sort","a","b","toLowerCase","filter","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6701a2a4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nclass AddAppointments extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            petName : '',\r\n            ownerName : '',\r\n            aptDate : '',\r\n            aptTime : '',\r\n            aptNotes : ''\r\n        };\r\n        this.handleChanges = this.handleChanges.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n    }\r\n\r\n    handleChanges(e){\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    handleAdd(e){\r\n        e.preventDefault();\r\n        let newApt = {\r\n            petName : this.state.petName,\r\n            ownerName : this.state.ownerName,\r\n            aptDate : this.state.aptDate + \" \" + this.state.aptTime,\r\n            aptNotes : this.state.aptNotes\r\n        };\r\n        this.props.addNewAppoinment(newApt);\r\n        this.setState({\r\n            petName : '',\r\n            ownerName : '',\r\n            aptDate : '',\r\n            aptTime : '',\r\n            aptNotes : ''\r\n        });\r\n        this.props.toggleForm();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div\r\n        className={\r\n          'card textcenter mt-3 ' +\r\n          (this.props.formDisplay ? '' : 'add-appointment')\r\n        }\r\n      >\r\n        <div className=\"apt-addheading card-header bg-primary text-white\"\r\n         onClick={this.props.toggleForm}>\r\n          <FaPlus/> Add Appointment\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"petName\"\r\n                readOnly\r\n              >\r\n                Pet Name\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"petName\"\r\n                  placeholder=\"Pet's Name\"\r\n                  value = {this.state.petName}\r\n                  onChange = {this.handleChanges}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"ownerName\"\r\n              >\r\n                Pet Owner\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"ownerName\"\r\n                  placeholder=\"Owner's Name\"\r\n                  value = {this.state.ownerName}\r\n                  onChange = {this.handleChanges}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"aptDate\"\r\n              >\r\n                Date\r\n              </label>\r\n              <div className=\"col-md-4\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  name=\"aptDate\"\r\n                  id=\"aptDate\"\r\n                  value = {this.state.aptDate}\r\n                  onChange = {this.handleChanges}\r\n                />\r\n              </div>\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"aptTime\"\r\n              >\r\n                Time\r\n              </label>\r\n              <div className=\"col-md-4\">\r\n                <input\r\n                  type=\"time\"\r\n                  className=\"form-control\"\r\n                  name=\"aptTime\"\r\n                  id=\"aptTime\"\r\n                  value = {this.state.aptTime}\r\n                  onChange = {this.handleChanges}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\r\n                Apt. Notes\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  cols=\"50\"\r\n                  name=\"aptNotes\"\r\n                  id=\"aptNotes\"\r\n                  placeholder=\"Appointment Notes\"\r\n                  value = {this.state.aptNotes}\r\n                  onChange = {this.handleChanges}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0\">\r\n              <div className=\"offset-md-2 col-md-10\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary d-block ml-auto\"\r\n                >\r\n                  Add Appointment\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AddAppointments;","import React, {Component} from 'react';\r\nimport {FaTimes} from 'react-icons/fa';\r\nimport Moment from \"react-moment\";\r\nclass ListAppointments extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"appointment-list item-list mb-3\">\r\n              {this.props.appointmentsList.map(item => (\r\n                <div className=\"pet-item col media py-3\" key={item.aptId}>\r\n                  <div className=\"mr-3\">\r\n                    <button className=\"pet-delete btn btn-sm btn-danger\"\r\n                    onClick={()=>this.props.deleteAppointment(item)}><FaTimes></FaTimes></button>\r\n                  </div>\r\n      \r\n                  <div className=\"pet-info media-body\">\r\n                    <div className=\"pet-head d-flex\">\r\n                      <span className=\"pet-name\"\r\n                       contentEditable \r\n                       suppressContentEditableWarning\r\n                       onBlur = { e => this.props.updateContent('petName',e.target.innerText,item.aptId)}>{item.petName}</span>\r\n                      <span className=\"apt-date ml-auto\">\r\n                          <Moment\r\n                           date={item.aptDate}\r\n                           parse=\"YYYY-MM-dd hh:mm\"\r\n                           format = \"MMM-D h:mma\"\r\n                          />\r\n                     </span>\r\n                    </div>\r\n      \r\n                    <div className=\"owner-name\">\r\n                      <span className=\"label-item\">Owner: </span>\r\n                      <span \r\n                      contentEditable \r\n                      suppressContentEditableWarning\r\n                      onBlur = { e => this.props.updateContent('ownerName',e.target.innerText,item.aptId)}>{item.ownerName}</span>\r\n                    </div>\r\n                    <div className=\"apt-notes\"\r\n                     contentEditable \r\n                     suppressContentEditableWarning\r\n                     onBlur = { e => this.props.updateContent('aptNotes',e.target.innerText,item.aptId)}>{item.aptNotes}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default ListAppointments;","import React, {Component} from 'react';\r\n\r\nclass SearchAppointments extends Component{\r\n    render(){\r\n        return (\r\n        <div className=\"search-appointments row justify-content-center my-4\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              id=\"SearchApts\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Search Appointments\"\r\n              onChange = { e => this.props.searchValue(e.target.value)}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary dropdown-toggle\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Sort by: <span className=\"caret\" />\r\n              </button>\r\n\r\n              <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={\r\n                    'sort-by dropdown-item ' +\r\n                    ( this.props.orderBy === 'petName' ? 'active' : '')\r\n                } \r\n                onClick = {(e) => {this.props.changeOrder('petName',this.props.orderAs)}}\r\n                href=\"#\">\r\n                  Pet Name\r\n                </button>\r\n                <button className={\r\n                    'sort-by dropdown-item ' +\r\n                     (this.props.orderBy === 'aptDate' ? 'active' : '')\r\n                } \r\n                onClick = {(e) => this.props.changeOrder('aptDate',this.props.orderAs)}\r\n                href=\"#\">\r\n                  Date\r\n                </button>\r\n                <button className={\r\n                    'sort-by dropdown-item ' +\r\n                    ( this.props.orderBy === 'ownerName' ? 'active' : '')\r\n                } \r\n                onClick = {(e) => this.props.changeOrder('ownerName',this.props.orderAs)}\r\n                href=\"#\">\r\n                  Owner\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={\r\n                    'sort-by dropdown-item ' +\r\n                     (this.props.orderAs === 'asc' ? 'active' : '')\r\n                }\r\n                onClick = {(e) => this.props.changeOrder(this.props.orderBy,'asc')}\r\n                href=\"#\">\r\n                  Asc\r\n                </button>\r\n                <button className={\r\n                    'sort-by dropdown-item ' +\r\n                    ( this.props.orderAs === 'desc' ? 'active' : '')\r\n                }\r\n                onClick = {(e) => this.props.changeOrder(this.props.orderBy,'desc')}\r\n                href=\"#\">\r\n                  Desc\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default SearchAppointments;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from \"./AddAppointments\";\nimport ListAppointments from \"./ListAppointments\";\nimport SearchAppointments from \"./SearchAppointments\";\nimport { without, findIndex } from 'lodash';\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            myAppoinments : [],\n            formDisplay : false,\n            orderBy : 'petName',\n            orderAs : 'asc',\n            searchKey : '',\n            lastIndexId : 1\n        };\n        this.addNewAppoinment = this.addNewAppoinment.bind(this);\n        this.deleteAppointment = this.deleteAppointment.bind(this);\n        this.toggleForm = this.toggleForm.bind(this);\n        this.changeOrder = this.changeOrder.bind(this);\n        this.searchValue = this.searchValue.bind(this);\n        this.updateContent =this.updateContent.bind(this);\n    }\n    addNewAppoinment(apt){\n        const appoinmentList = this.state.myAppoinments;\n        apt.aptId = this.state.lastIndexId;\n        appoinmentList.unshift(apt);\n        this.setState({\n          lastIndexId : this.state.lastIndexId +1\n        });\n    }\n    deleteAppointment(apt){\n        let updatedApts = this.state.myAppoinments;\n        updatedApts = without(updatedApts,apt);\n        this.setState({\n            myAppoinments : updatedApts\n        })\n        \n    }\n    toggleForm(){\n      this.setState({\n        formDisplay : !this.state.formDisplay\n      })\n    }\n    changeOrder(orderBy,orderAs){\n      this.setState({\n        orderBy : orderBy,\n        orderAs : orderAs\n      });\n    }\n    searchValue(value){\n      this.setState({\n        searchKey : value\n      });\n    }\n    updateContent(name,value,id){\n      let newAppoinmentList = this.state.myAppoinments;\n      let requiredId = findIndex(this.state.myAppoinments,{\n         aptId : id\n      });\n      newAppoinmentList [requiredId][name] = value;\n      this.setState({\n        myAppoinments : newAppoinmentList\n      });\n    }\n    componentDidMount(){\n        fetch('./data.json')\n        .then(response => response.json())\n        .then(result => {\n            const apts = result.map(item => {\n                item.aptId = this.state.lastIndexId;\n                this.setState({\n                    lastIndexId : this.state.lastIndexId+1\n                });\n                return item;\n            })\n            this.setState( {\n             myAppoinments : apts\n            })\n        });\n    }\n    render(){   \n      let sortedAppointments = this.state.myAppoinments;\n      let order;\n      if(this.state.orderAs === 'asc'){\n        order = 1;\n      } else{\n        order = -1;\n      }\n      sortedAppointments = sortedAppointments.sort((a,b) => {\n        if(a[this.state.orderBy].toLowerCase() < b[this.state.orderBy].toLowerCase() ){\n          return -1 * order;\n        }else{\n          return 1 * order;\n        }\n      })\n      .filter(item => {\n        return (\n          item['petName'].toLowerCase()\n          .includes(this.state.searchKey.toLowerCase()) ||\n          item['ownerName'].toLowerCase()\n          .includes(this.state.searchKey.toLowerCase()) ||\n          item['aptNotes'].toLowerCase()\n          .includes(this.state.searchKey.toLowerCase())\n        );\n      });\n        return (\n        <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments \n                 formDisplay = {this.state.formDisplay} \n                 toggleForm = {this.toggleForm}\n                 addNewAppoinment = {this.addNewAppoinment}/>\n                <SearchAppointments \n                 orderAs={this.state.orderAs}\n                 orderBy = {this.state.orderBy}\n                 changeOrder = {this.changeOrder}\n                 searchValue = {this.searchValue}/>\n                <ListAppointments \n                 appointmentsList = {sortedAppointments}\n                 deleteAppointment =  {this.deleteAppointment}\n                 updateContent = {this.updateContent}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './css/index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render( < React.StrictMode >\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}